name: Deployment Pipeline

on:
  # Trigger workflow on push to main (final deployment to production)
  push:
    branches:
      - main  # Only deploy from main, never from dev

  # Trigger workflow on pull request targeting dev branch (tests PRs before merging)
  pull_request:
    branches:
      - dev  # Only run tests for PRs targeting the dev branch
    types: [opened, synchronize, reopened]  # Run on PR creation or updates

jobs:
  # Job to run tests on PRs targeting dev (before merging)
  run_tests_on_pr:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'  # Only runs for PR events
    steps:
      # Step 1: Checkout the code
      - uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Check code style with ESLint
      - name: Check style
        run: npm run eslint
       
      # Step 5: Build the application
      - name: Build application
        run: npm run build
      
      # Step 6: Run unit tests
      - name: Run tests
        run: npm test

      # Step 7: Print date for debugging purposes (Optional)
      - name: Print date
        run: date

      # Step 8: List directory contents (Optional)
      - name: List directory
        run: ls -l

  # Job to deploy and bump version (only when code is merged into main)
  deploy_and_tag_release:
    needs: run_tests_on_pr  # Ensure tests pass before continuing
    runs-on: ubuntu-20.04
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only run on push to main branch
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up GitHub CLI to interact with the GitHub API
      - name: Set up GitHub CLI
        uses: github/gh-action@v1
        with:
          gh-token: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for API interactions

      # Step 3: Bump version and push tag using github-tag-action
      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.64.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_TYPE: 'patch'  # Bump the patch version by default
          DRY_RUN: false  # Set to 'true' for dry run (testing without actual changes)

      # Step 4: Deploy to production or other environments
      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add your deployment steps here, e.g., SSH to server, deploy code, etc.
